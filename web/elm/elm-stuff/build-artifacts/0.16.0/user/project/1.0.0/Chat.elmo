Elm.Chat = Elm.Chat || {};
Elm.Chat.make = function (_elm) {
   "use strict";
   _elm.Chat = _elm.Chat || {};
   if (_elm.Chat.values) return _elm.Chat.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp = Elm.StartApp.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var view = F2(function (address,model) {    return $Html.text("Hello there Phoenix! Really.");});
   var update = F2(function (action,model) {    var _p0 = action;return {ctor: "_Tuple2",_0: model,_1: $Effects.none};});
   var NoOp = {ctor: "NoOp"};
   var init = function () {
      var model = {userName: "yurnaim",chat2send: "hello",chatData: _U.list([])};
      return {ctor: "_Tuple2",_0: model,_1: $Effects.none};
   }();
   var Chat = F2(function (a,b) {    return {user: a,msg: b};});
   var Model = F3(function (a,b,c) {    return {userName: a,chat2send: b,chatData: c};});
   var app = $StartApp.start({init: init,update: update,view: view,inputs: _U.list([])});
   var tasks = Elm.Native.Task.make(_elm).performSignal("tasks",app.tasks);
   var main = app.html;
   return _elm.Chat.values = {_op: _op,main: main,app: app,Model: Model,Chat: Chat,init: init,NoOp: NoOp,update: update,view: view};
};